{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/FilterValues.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","onSelectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filterByCompleted","onFilterByCompleted","filterByTitle","onFilterByTitle","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterValues","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","visibleTodos","setVisibleTodos","hasLoading","setHasLoading","all","setFilterByCompleted","setFilterByTitle","setSelectTodo","hasUncorrectLink","setHasUncorrectLink","filteredTodos","filter","generalQuery","toLocaleLowerCase","includes","catch","finally","v","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c166073b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: Todo | null,\n  onSelectTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectTodo, onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames('far',\n                    { 'fa-eye-slash': selectTodo === todo },\n                    { 'fa-eye': selectTodo !== todo })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { FilterValues } from '../../types/FilterValues';\n\ntype Props = {\n  filterByCompleted: FilterValues,\n  onFilterByCompleted: (value: FilterValues) => void,\n  filterByTitle: string,\n  onFilterByTitle: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterByCompleted, onFilterByCompleted, filterByTitle, onFilterByTitle,\n}) => {\n  const handlerSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilterByCompleted(event.target.value as FilterValues);\n  };\n\n  const handlerInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onFilterByTitle(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterByCompleted}\n            onChange={handlerSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterByTitle}\n          onChange={handlerInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filterByTitle.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onFilterByTitle('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterValues {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  onSelectTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, onSelectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterValues } from './types/FilterValues';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [hasLoading, setHasLoading] = useState(false);\n  const [filterByCompleted, setFilterByCompleted] = useState(FilterValues.all);\n  const [filterByTitle, setFilterByTitle] = useState('');\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n  const [hasUncorrectLink, setHasUncorrectLink] = useState(false);\n\n  useEffect(() => {\n    setHasLoading(true);\n    getTodos()\n      .then(res => {\n        const filteredTodos = res.filter(todo => {\n          switch (filterByCompleted) {\n            case 'all':\n              return true;\n\n            case 'active':\n              return !todo.completed;\n\n            case 'completed':\n              return todo.completed;\n\n            default:\n              return false;\n          }\n        }).filter(todo => {\n          const generalQuery = filterByTitle.toLocaleLowerCase();\n          const generalTitle = todo.title.toLocaleLowerCase();\n\n          return generalTitle.includes(generalQuery);\n        });\n\n        setVisibleTodos(filteredTodos);\n      })\n      .catch(() => {\n        setVisibleTodos([]);\n        setHasUncorrectLink(true);\n      })\n      .finally(() => {\n        setHasLoading(false);\n      });\n  }, [filterByCompleted, filterByTitle]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterByCompleted={filterByCompleted}\n                onFilterByCompleted={(v) => setFilterByCompleted(v)}\n                filterByTitle={filterByTitle}\n                onFilterByTitle={v => setFilterByTitle(v)}\n\n              />\n            </div>\n\n            {hasUncorrectLink\n              ? (<p>Can&apos;t load Todos with server...</p>)\n              : (\n                <div className=\"block\">\n                  {hasLoading\n                    ? (<Loader />)\n                    : (\n                      <TodoList\n                        todos={visibleTodos}\n                        selectTodo={selectTodo}\n                        onSelectTodo={(todo) => setSelectTodo(todo)}\n                      />\n                    )}\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {selectTodo && (\n        <TodoModal\n          todo={selectTodo}\n          onSelectTodo={(todo) => setSelectTodo(todo)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}